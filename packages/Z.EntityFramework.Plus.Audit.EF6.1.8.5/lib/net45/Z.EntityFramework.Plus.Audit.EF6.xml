<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Z.EntityFramework.Plus.Audit.EF6</name>
    </assembly>
    <members>
        <member name="M:Z.EntityFramework.Plus.InternalExtensions.GetObjectQuery``1(System.Linq.IQueryable{``0})">
            <summary>An IQueryable&lt;TEntity&gt; extension method that get the ObjectQuery from the query.</summary>
            <typeparam name="T">The type of elements of the query.</typeparam>
            <param name="query">The query to get the ObjectQuery from.</param>
            <returns>The ObjectQuery from the query.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.InternalExtensions.GetPropertyOrFieldAccessor(System.Linq.Expressions.LambdaExpression)">
            <summary>
                A LambdaExpression extension method that gets property or field accessor.
            </summary>
            <exception cref="T:System.Exception">Thrown when an exception error condition occurs.</exception>
            <param name="this">The @this to act on.</param>
            <returns>The property or field accessor.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.InternalExtensions.GetPropertyOrFieldAccessors(System.Linq.Expressions.LambdaExpression)">
            <summary>
                Gets the property or field accessors in this collection.
            </summary>
            <param name="this">The @this to act on.</param>
            <returns>An array of property or field accessor.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.InternalExtensions.RemoveConvert(System.Linq.Expressions.Expression)">
            <summary>
                An Expression extension method that removes all convert expression from the expression.
            </summary>
            <param name="this">The @this to act on.</param>
            <returns>An Expression without convert expression.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.InternalExtensions.GetPropertyOrField(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression)">
            <summary>
                An Expression extension method that gets a property or field from an expression.
            </summary>
            <exception cref="T:System.Exception">Thrown when an exception error condition occurs.</exception>
            <param name="this">The @this to act on.</param>
            <param name="parameterExpression">The parameter @this.</param>
            <returns>The property or field from the expression.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.InternalExtensions.GetPropertyOrFieldAccess(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression)">
            <summary>
                An Expression extension method that gets a property or field access from an expression.
            </summary>
            <exception cref="T:System.Exception">Thrown when an exception error condition occurs.</exception>
            <param name="this">The @this to act on.</param>
            <param name="parameterExpression">The parameter @this.</param>
            <returns>The property or field access from the expression.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.PropertyOrFieldAccessor.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.Reflection.MemberInfo})">
            <summary>Constructor.</summary>
            <param name="propertyOrFieldPaths">The FieldPaths.</param>
        </member>
        <member name="M:Z.EntityFramework.Plus.PropertyOrFieldAccessor.#ctor(System.Reflection.MemberInfo)">
            <summary>Constructor.</summary>
            <param name="property">The property.</param>
        </member>
        <member name="P:Z.EntityFramework.Plus.PropertyOrFieldAccessor.PropertyOrFieldPaths">
            <summary>Gets or sets the FieldPaths.</summary>
            <value>The FieldPaths.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.PropertyOrFieldAccessor.PropertyOrField">
            <summary>Gets or sets the property.</summary>
            <value>The property.</value>
        </member>
        <member name="M:Z.EntityFramework.Plus.PropertyOrFieldAccessor.GetValue(System.Object)">
            <summary>
                Gets a value.
            </summary>
            <param name="obj">The object.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.PropertyOrFieldAccessor.GetValue``1(System.Object)">
            <summary>
                Gets a value.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="obj">The object.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.PropertyOrFieldAccessor.SetValue(System.Object,System.Object)">
            <summary>
                Sets a value.
            </summary>
            <param name="obj">The object.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Z.EntityFramework.Plus.PropertyOrFieldAccessor.ToString">
            <summary>
                Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.Internal.Core.SchemaObjectModel.Utility.CreateGetFunc(System.Type,System.String)">
            <summary>
                Creates get function.
            </summary>
            <param name="type">The type.</param>
            <param name="propertyName">Name of the property.</param>
            <returns>The new get function.</returns>
        </member>
        <member name="T:Z.EntityFramework.Plus.Audit">
            <summary>An audit.</summary>
        </member>
        <member name="F:Z.EntityFramework.Plus.Audit._configuration">
            <summary>The lazy configuration.</summary>
        </member>
        <member name="M:Z.EntityFramework.Plus.Audit.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="P:Z.EntityFramework.Plus.Audit.Entries">
            <summary>Gets or sets the entries.</summary>
            <value>The entries.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Audit.CreatedBy">
            <summary>Gets or sets the  created by username.</summary>
            <value>The created by username.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Audit.Configuration">
            <summary>Gets the configuration.</summary>
            <value>The configuration.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.Audit.CurrentOrDefaultConfiguration">
            <summary>Gets the current or default configuration.</summary>
            <value>The current or default configuration.</value>
        </member>
        <member name="M:Z.EntityFramework.Plus.Audit.PostSaveChanges">
            <summary>Updates audit entries after the save changes has been executed.</summary>
        </member>
        <member name="M:Z.EntityFramework.Plus.Audit.PreSaveChanges(System.Data.Entity.DbContext)">
            <summary>Adds audit entries before the save changes has been executed.</summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Z.EntityFramework.Plus.Audit.AuditEntityAdded(Z.EntityFramework.Plus.Audit,System.Data.Entity.Core.Objects.ObjectStateEntry)">
            <summary>Audit entity added.</summary>
            <param name="audit">The audit to use to add changes made to the context.</param>
            <param name="objectStateEntry">The object state entry.</param>
        </member>
        <member name="M:Z.EntityFramework.Plus.Audit.AuditEntityAdded(Z.EntityFramework.Plus.AuditEntry,System.Data.Entity.Core.Objects.ObjectStateEntry,System.Data.Entity.Core.Objects.DbUpdatableDataRecord,System.String)">
            <summary>Audit entity added.</summary>
            <param name="auditEntry">The audit entry.</param>
            <param name="objectStateEntry">The object state entry.</param>
            <param name="record">The record.</param>
            <param name="prefix">The prefix.</param>
        </member>
        <member name="M:Z.EntityFramework.Plus.Audit.AuditEntityDeleted(Z.EntityFramework.Plus.Audit,System.Data.Entity.Core.Objects.ObjectStateEntry)">
            <summary>Audit entity deleted.</summary>
            <param name="audit">The audit to use to add changes made to the context.</param>
            <param name="objectStateEntry">The object state entry.</param>
        </member>
        <member name="M:Z.EntityFramework.Plus.Audit.AuditEntityDeleted(Z.EntityFramework.Plus.AuditEntry,System.Data.Entity.Core.Objects.ObjectStateEntry,System.Data.Common.DbDataRecord,System.String)">
            <summary>Audit entity deleted.</summary>
            <param name="entry">The entry.</param>
            <param name="record">The record.</param>
            <param name="prefix">The prefix.</param>
        </member>
        <member name="M:Z.EntityFramework.Plus.Audit.AuditEntityModified(Z.EntityFramework.Plus.Audit,System.Data.Entity.Core.Objects.ObjectStateEntry,Z.EntityFramework.Plus.AuditEntryState)">
            <summary>Audit entity modified.</summary>
            <param name="audit">The audit to use to add changes made to the context.</param>
            <param name="objectStateEntry">The object state entry.</param>
        </member>
        <member name="M:Z.EntityFramework.Plus.Audit.AuditEntityModified(Z.EntityFramework.Plus.Audit,Z.EntityFramework.Plus.AuditEntry,System.Data.Entity.Core.Objects.ObjectStateEntry,System.Data.Common.DbDataRecord,System.Data.Entity.Core.Objects.DbUpdatableDataRecord,System.String)">
            <summary>Audit entity modified.</summary>
            <param name="audit">The audit to use to add changes made to the context.</param>
            <param name="entry">The entry.</param>
            <param name="objectStateEntry">The object state entry.</param>
            <param name="orginalRecord">The orginal record.</param>
            <param name="currentRecord">The current record.</param>
            <param name="prefix">The prefix.</param>
        </member>
        <member name="M:Z.EntityFramework.Plus.Audit.AuditRelationAdded(Z.EntityFramework.Plus.Audit,System.Data.Entity.Core.Objects.ObjectStateEntry)">
            <summary>Audit relationship added.</summary>
            <param name="audit">The audit to use to add changes made to the context.</param>
            <param name="objectStateEntry">The object state entry.</param>
        </member>
        <member name="M:Z.EntityFramework.Plus.Audit.AuditRelationDeleted(Z.EntityFramework.Plus.Audit,System.Data.Entity.Core.Objects.ObjectStateEntry)">
            <summary>Audit relationship deleted.</summary>
            <param name="audit">The audit to use to add changes made to the context.</param>
            <param name="objectStateEntry">The object state entry.</param>
        </member>
        <member name="M:Z.EntityFramework.Plus.Audit.PostSaveChanges(Z.EntityFramework.Plus.Audit)">
            <summary>Updates audit entries after the save changes has been executed.</summary>
            <param name="audit">The audit to use to add changes made to the context.</param>
        </member>
        <member name="M:Z.EntityFramework.Plus.Audit.PreSaveChanges(Z.EntityFramework.Plus.Audit,System.Data.Entity.DbContext)">
            <summary>Adds audit entries before the save changes has been executed.</summary>
            <param name="audit">The audit to use to add changes made to the context.</param>
            <param name="context">The context used to audits and saves all changes made.</param>
        </member>
        <member name="T:Z.EntityFramework.Plus.AuditConfiguration">
            <summary>An audit configuration.</summary>
        </member>
        <member name="M:Z.EntityFramework.Plus.AuditConfiguration.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditConfiguration.AuditEntryFactory">
            <summary>Gets or sets the audit entry factory.</summary>
            <value>The audit entry factory.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditConfiguration.AuditEntryPropertyFactory">
            <summary>Gets or sets the audit entry property factory.</summary>
            <value>The audit entry property factory.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditConfiguration.AutoSavePreAction">
            <summary>Gets or sets the automatic audit save pre action.</summary>
            <value>The automatic audit save pre action.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditConfiguration.EntityValueFormatters">
            <summary>Gets or sets a list of formatter for entity values.</summary>
            <value>A list of formatter for entity values.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditConfiguration.ExcludeIncludeEntityPredicates">
            <summary>Gets or sets a list of predicates to exclude or include entities.</summary>
            <value>A list of predicates to exclude or include entities.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditConfiguration.ExcludeIncludePropertyPredicates">
            <summary>Gets or sets a list of predicates to exclude or include properties.</summary>
            <value>A list of predicates to exclude or include properties.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditConfiguration.IgnoreEntityAdded">
            <summary>Gets or sets a value indicating whether the entity with Added state are audited.</summary>
            <value>true if entity with Added state are audited, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditConfiguration.IgnoreEntityDeleted">
            <summary>Gets or sets a value indicating whether the entity with Deleted state are audited.</summary>
            <value>true if entity with Deleted state are audited, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditConfiguration.IgnoreEntityModified">
            <summary>Gets or sets a value indicating whether the entity with Modified state are audited.</summary>
            <value>true if entity with Modified state are audited, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditConfiguration.IgnoreEntitySoftAdded">
            <summary>Gets or sets a value indicating whether the ignore entity soft added.</summary>
            <value>true if ignore entity soft added, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditConfiguration.IgnoreEntitySoftDeleted">
            <summary>Gets or sets a value indicating whether the ignore entity soft deleted.</summary>
            <value>true if ignore entity soft deleted, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditConfiguration.IgnoreRelationshipAdded">
            <summary>Gets or sets a value indicating whether the association with Added state are audited.</summary>
            <value>true if association with Added state are audited, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditConfiguration.IgnoreRelationshipDeleted">
            <summary>Gets or sets a value indicating whether the association with Deleted state are audited.</summary>
            <value>true if association with Deleted state are audited, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditConfiguration.IgnorePropertyUnchanged">
            <summary>Gets or sets a value indicating whether all unchanged property of a modified entity are audited.</summary>
            <value>true if unchanged property of a modified entity are audited, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditConfiguration.IsAuditedDictionary">
            <summary>Gets or sets a dictionary indicating if an entity type or a property name is audited.</summary>
            <value>A dictionary indicating if an entity type or a property name is audited.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditConfiguration.SoftAddedPredicates">
            <summary>Gets or sets a list of predicates to check if the modified entity is soft added.</summary>
            <value>A list of predicates to check if the modified entity is soft added.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditConfiguration.SoftDeletedPredicates">
            <summary>Gets or sets a list of predicates to check if the modified entity is soft deleted.</summary>
            <value>A list of predicates to check if the modified entity is soft deleted.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditConfiguration.ValueFormatterDictionary">
            <summary>Gets or sets a dictionary of value formatter for a property name.</summary>
            <value>A dictionary of value formatter for a property name.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditConfiguration.ExcludeRelationshipIfOneExcluded">
            <summary>
            Gets or sets a value indicating whether the exclude relationship if one excluded.
            </summary>
            <value>True if exclude relationship if one excluded, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditConfiguration.UseNullForDBNullValue">
            <summary>
                Gets or sets a value indicating whether null value should be used in the Audit instead of DBNull.Value
            </summary>
            <value>The value indicating whether null value should be used in the Audit instead of DBNull.Value</value>
        </member>
        <member name="M:Z.EntityFramework.Plus.AuditConfiguration.Clone">
            <summary>Makes a deep copy of this object.</summary>
            <returns>A copy of this object.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.AuditConfiguration.Exclude(System.Func{System.Object,System.Boolean})">
            <summary>Excludes from the audit all entities which satisfy the predicate.</summary>
            <param name="excludeEntityPredicate">The exclude entity predicate.</param>
            <returns>An AuditConfiguration.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.AuditConfiguration.Exclude``1">
            <summary>Excludes from the audit all entities of 'T' type or entities which the type derive from 'T'.</summary>
            <typeparam name="T">Generic type to exclude.</typeparam>
            <returns>An AuditConfiguration.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.AuditConfiguration.ExcludeProperty">
            <summary>Excludes from the audit all properties.</summary>
            <returns>An AuditConfiguration.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.AuditConfiguration.ExcludeProperty``1">
            <summary>
                Excludes from the audit all properties from entities of 'T' type or entities which the type
                derive from 'T'.
            </summary>
            <typeparam name="T">Generic type to exclude all properties.</typeparam>
            <returns>An AuditConfiguration.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.AuditConfiguration.ExcludeProperty``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
                Excludes from the audit selected properties from entities of 'T' type or entities which the
                type derive from 'T'.
            </summary>
            <typeparam name="T">Generic type to exclude selected properties.</typeparam>
            <param name="propertySelector">The property selector.</param>
            <returns>An AuditConfiguration.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.AuditConfiguration.Format``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Func{System.Object,System.Object})">
            <summary>
                Formats value for selected properties from entities of 'T' type or entities which the type
                derive from 'T'.
            </summary>
            <typeparam name="T">Generic type to format selected properties.</typeparam>
            <param name="propertySelector">The property selector.</param>
            <param name="formatter">The formatter to use to format value.</param>
            <returns>An AuditConfiguration.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.AuditConfiguration.FormatValue(System.Object,System.String,System.Object)">
            <summary>Format a value for the specified entry and property name.</summary>
            <param name="entry">The entry.</param>
            <param name="propertyName">The property name.</param>
            <returns>The formatted value.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.AuditConfiguration.GetEntityModifiedState(System.Data.Entity.Core.Objects.ObjectStateEntry)">
            <summary>Gets the state of the entity modified (EntityModified, EntitySoftAdded, EntitySoftDeleted).</summary>
            <param name="entry">The entry.</param>
            <returns>The state of the entity modified (EntityModified, EntitySoftAdded, EntitySoftDeleted).</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.AuditConfiguration.Include(System.Func{System.Object,System.Boolean})">
            <summary>Includes from the audit all entities which satisfy the predicate.</summary>
            <param name="includeEntityPredicate">The include entity predicate.</param>
            <returns>An AuditConfiguration.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.AuditConfiguration.Include``1">
            <summary>Includes from the audit all entities of 'T' type or entities which the type derive from 'T'.</summary>
            <typeparam name="T">Generic type to include.</typeparam>
            <returns>An AuditConfiguration.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.AuditConfiguration.IncludeProperty">
            <summary>Includes from the audit all properties.</summary>
            <returns>An AuditConfiguration.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.AuditConfiguration.IncludeProperty``1">
            <summary>
                Includes from the audit all properties from entities of 'T' type or entities which the type
                derive from 'T'.
            </summary>
            <typeparam name="T">Generic type to include all properties.</typeparam>
            <returns>An AuditConfiguration.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.AuditConfiguration.IncludeProperty``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
                Includes from the audit selected properties from entities of 'T' type or entities which the
                type derive from 'T'.
            </summary>
            <typeparam name="T">Generic type to include selected properties.</typeparam>
            <param name="propertySelector">The property selector.</param>
            <returns>An AuditConfiguration.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.AuditConfiguration.IsAuditedEntity(System.Data.Entity.Core.Objects.ObjectStateEntry)">
            <summary>Checks if the entity is audited.</summary>
            <param name="entry">The entry.</param>
            <returns>true if the entity is audited, false if not.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.AuditConfiguration.IsAuditedProperty(System.Data.Entity.Core.Objects.ObjectStateEntry,System.String)">
            <summary>Check if the property name is audited.</summary>
            <param name="entry">The entry.</param>
            <param name="propertyName">The property name.</param>
            <returns>true if the property name is audited, false if not.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.AuditConfiguration.SoftAdded(System.Func{System.Object,System.Boolean})">
            <summary>
                Change from "EntityModified" to "EntitySoftAdded" for all entities which satisfy the predicate.
            </summary>
            <param name="softAddPredicate">The soft add predicate.</param>
            <returns>An AuditConfiguration.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.AuditConfiguration.SoftAdded``1(System.Func{``0,System.Boolean})">
            <summary>
                Change from "EntityModified" to "EntitySoftAdded" for all entities of 'T' type or entities which the
                type derive from 'T' and which satisfy the predicate.
            </summary>
            <typeparam name="T">Generic type to soft add entity.</typeparam>
            <param name="softAddPredicate">The soft add predicate.</param>
            <returns>An AuditConfiguration.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.AuditConfiguration.SoftDeleted(System.Func{System.Object,System.Boolean})">
            <summary>
                Change from "EntityModified' to "EntitySoftDeleted" for all entities which satisfy the predicate.
            </summary>
            <param name="softDeletePredicate">The soft add predicate.</param>
            <returns>An AuditConfiguration.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.AuditConfiguration.SoftDeleted``1(System.Func{``0,System.Boolean})">
            <summary>
                Change from "EntityModified" to "EntitySoftDeleted" for all entities of 'T' type or entities which the
                type derive from 'T' and which satisfy the predicate.
            </summary>
            <typeparam name="T">Generic type to soft delete entity.</typeparam>
            <param name="softDeletePredicate">The soft delete predicate.</param>
            <returns>An AuditConfiguration.</returns>
        </member>
        <member name="T:Z.EntityFramework.Plus.AuditEntry">
            <summary>An audit entry.</summary>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditEntry.AuditEntryID">
            <summary>Gets or sets the identifier of the audit entry.</summary>
            <value>The identifier of the audit entry.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditEntry.CreatedBy">
            <summary>Gets or sets who created this object.</summary>
            <value>Describes who created this object.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditEntry.CreatedDate">
            <summary>Gets or sets the the date of the changes.</summary>
            <value>The date of the changes.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditEntry.DelayedKey">
            <summary>Gets or sets the delayed key.</summary>
            <value>The delayed key.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditEntry.Entity">
            <summary>Gets or sets the object state entry.</summary>
            <value>The object state entry.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditEntry.Entry">
            <summary>Gets or sets the object state entry.</summary>
            <value>The object state entry.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditEntry.EntitySetName">
            <summary>Gets or sets the name of the entity set.</summary>
            <value>The name of the entity set.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditEntry.EntityTypeName">
            <summary>Gets or sets the name of the entity type.</summary>
            <value>The name of the entity type.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditEntry.Parent">
            <summary>Gets or sets the parent.</summary>
            <value>The parent.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditEntry.Properties">
            <summary>Gets or sets the properties.</summary>
            <value>The properties.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditEntry.State">
            <summary>Gets or sets the entry state.</summary>
            <value>The entry state.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditEntry.StateName">
            <summary>Gets or sets the name of the entry state.</summary>
            <value>The name of the entry state.</value>
        </member>
        <member name="T:Z.EntityFramework.Plus.AuditEntryProperty">
            <summary>An audit entry property.</summary>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditEntryProperty.AuditEntryPropertyID">
            <summary>Gets or sets the identifier of the audit entry property.</summary>
            <value>The identifier of the audit entry property.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditEntryProperty.AuditEntryID">
            <summary>Gets or sets the identifier of the audit entry.</summary>
            <value>The identifier of the audit entry.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditEntryProperty.Parent">
            <summary>Gets or sets the parent.</summary>
            <value>The parent.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditEntryProperty.PropertyName">
            <summary>Gets or sets the name of the property audited.</summary>
            <value>The name of the property audited.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditEntryProperty.RelationName">
            <summary>Gets or sets the name of the relation audited.</summary>
            <value>The name of the relation audited.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditEntryProperty.NewValue">
            <summary>Gets or sets the new value audited.</summary>
            <value>The new value audited.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditEntryProperty.IsValueSet">
            <summary>Gets or sets a value indicating whether OldValue and NewValue is set.</summary>
            <value>true if OldValue and NewValue is set, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditEntryProperty.InternalPropertyName">
            <summary>Gets or sets the name of the property internally.</summary>
            <value>The name of the property internally.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditEntryProperty.NewValueFormatted">
            <summary>Gets or sets the new value audited formatted.</summary>
            <value>The new value audited formatted.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditEntryProperty.OldValue">
            <summary>Gets or sets the old value audited.</summary>
            <value>The old value audited.</value>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditEntryProperty.OldValueFormatted">
            <summary>Gets or sets the old value audited formatted.</summary>
            <value>The old value audited formatted.</value>
        </member>
        <member name="T:Z.EntityFramework.Plus.AuditEntryState">
            <summary>Values that represent audit entry states.</summary>
        </member>
        <member name="F:Z.EntityFramework.Plus.AuditEntryState.EntityAdded">
            <summary>An enum constant representing the entity added option.</summary>
        </member>
        <member name="F:Z.EntityFramework.Plus.AuditEntryState.EntityDeleted">
            <summary>An enum constant representing the entity deleted option.</summary>
        </member>
        <member name="F:Z.EntityFramework.Plus.AuditEntryState.EntityModified">
            <summary>An enum constant representing the entity modified option.</summary>
        </member>
        <member name="F:Z.EntityFramework.Plus.AuditEntryState.EntitySoftAdded">
            <summary>An enum constant representing the entity soft added option.</summary>
        </member>
        <member name="F:Z.EntityFramework.Plus.AuditEntryState.EntitySoftDeleted">
            <summary>An enum constant representing the entity soft deleted option.</summary>
        </member>
        <member name="F:Z.EntityFramework.Plus.AuditEntryState.RelationshipAdded">
            <summary>An enum constant representing the relationship added option.</summary>
        </member>
        <member name="F:Z.EntityFramework.Plus.AuditEntryState.RelationshipDeleted">
            <summary>An enum constant representing the relationship deleted option.</summary>
        </member>
        <member name="F:Z.EntityFramework.Plus.AuditEntryState.EntityCurrent">
            <summary>An enum constant representing the entity current option.</summary>
        </member>
        <member name="T:Z.EntityFramework.Plus.AuditManager">
            <summary>Manager for audits.</summary>
        </member>
        <member name="M:Z.EntityFramework.Plus.AuditManager.#cctor">
            <summary>Static constructor.</summary>
        </member>
        <member name="P:Z.EntityFramework.Plus.AuditManager.DefaultConfiguration">
            <summary>Gets or sets the default audit configuration.</summary>
            <value>The default audit configuration.</value>
        </member>
        <member name="M:Z.EntityFramework.Plus.AuditExtensions.SaveChanges(System.Data.Entity.DbContext,Z.EntityFramework.Plus.Audit)">
            <summary>Audits and saves all changes made in this context to the underlying database.</summary>
            <param name="context">The context used to audits and saves all changes made.</param>
            <param name="audit">The audit to use to add changes made to the context.</param>
            <returns>The number of objects written to the underlying database.</returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.AuditExtensions.SaveChangesAsync(System.Data.Entity.DbContext,Z.EntityFramework.Plus.Audit)">
            <summary>Asynchronously audits and saves all changes made in this context to the underlying database.</summary>
            <param name="context">The context used to audits and saves all changes made.</param>
            <param name="audit">The audit to use to add changes made to the context.</param>
            <returns>
                A task that represents the asynchronous save operation. The task result contains the number of objects written
                to the underlying database
            </returns>
        </member>
        <member name="M:Z.EntityFramework.Plus.AuditExtensions.SaveChangesAsync(System.Data.Entity.DbContext,Z.EntityFramework.Plus.Audit,System.Threading.CancellationToken)">
            <summary>A DbContext extension method that saves the changes asynchronous.</summary>
            <param name="context">The context used to audits and saves all changes made.</param>
            <param name="audit">The audit to use to add changes made to the context.</param>
            <param name="cancellationToken">A CancellationToken to observe while waiting for the task to complete.</param>
            <returns>
                A task that represents the asynchronous save operation. The task result contains the number of objects written
                to the underlying database
            </returns>
        </member>
    </members>
</doc>
